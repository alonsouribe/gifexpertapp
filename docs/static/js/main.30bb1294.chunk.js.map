{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","value","type","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","image","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEJC,mBAAS,IAFL,mBAEjCC,EAFiC,KAErBC,EAFqB,KAiBxC,OACG,0BAAMC,SAVY,SAACC,GACnBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAMd,2BACGO,MAAOR,EACPS,KAAK,OACLC,SAlBmB,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOH,Y,uBCRbI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,iDAEmCC,UAAWH,GAF9C,+DAGDI,MAAQF,GAHP,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KACFC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATpB,kBAabM,GAba,4CAAH,sDCWRO,EATK,SAAC,GAAwB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAChC,OACG,yBAAKc,UAAU,0CACZ,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,2BAAKA,KCwBCO,EA1BC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDN,SAAEA,GAAe,IAAD,EACfd,mBAAS,CAChCqB,KAAM,GACNa,SAAS,IAH6B,mBAClCC,EADkC,KAC3BC,EAD2B,KAiBzC,OAXAC,qBAAW,WAERxB,EAASC,GACLwB,MAAM,SAAAX,GACJS,EAAS,CACNf,KAAMM,EACNO,SAAS,SAGlB,CAAEpB,IAEEqB,EDd0BI,CAAczB,GAAlCa,EAFkB,EAEvBN,KAAaa,EAFU,EAEVA,QAErB,OACG,oCACG,wBAAIJ,UAAU,qCAAsChB,GAGjDoB,GAAW,uBAAGJ,UAAU,oCAAb,eAGd,yBAAKA,UAAU,aAETH,EAAOJ,KAAK,SAAAiB,GAAK,OACd,kBAAC,EAAD,eACGC,IAAMD,EAAMf,IACPe,UEeXE,EAhCM,WAAM,MAGY1C,mBAAS,CAAC,SAHtB,mBAGjB2C,EAHiB,KAGL5C,EAHK,KAUxB,OACG,oCACG,8CAEA,kBAAC,EAAD,CAAaA,cAAgBA,IAE7B,6BACA,4BAEM4C,EAAWpB,KAAK,SAACT,GAAD,OAEb,kBAAC,EAAD,CACG2B,IAAM3B,EACNA,SAAWA,UCrBhC8B,IAASC,OACP,oCACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.30bb1294.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n   const [inputValue, setInputValue] = useState('');\r\n\r\n   const handleInputOnChange = (e) => {\r\n      setInputValue(e.target.value);\r\n   }\r\n\r\n   const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      if(inputValue.trim().length > 2) {\r\n         setCategories(cats => [inputValue, ...cats]);\r\n         setInputValue('');\r\n      }\r\n   }\r\n\r\n   return (\r\n      <form onSubmit={ handleSubmit }>\r\n         <input\r\n            value={inputValue}\r\n            type=\"text\"\r\n            onChange={ handleInputOnChange }\r\n         />\r\n      </form>\r\n   );\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n   setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","   export const getGifs = async (category ) => {\r\n\r\n      const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=2gydL3BBblnsNLBmhEHm4fo3GFgCQiqj`;\r\n      const resp = await fetch ( url );\r\n      const { data } = await resp.json();\r\n      const gifs = data.map ( img => {\r\n         return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n         }\r\n      });\r\n\r\n      return gifs;\r\n   }\r\n   ","import React from 'react';\r\n\r\nconst GifGridItem = ( { id, title, url }) => {\r\n   return (\r\n      <div className=\"card animate__animated animate__fadeIn\">\r\n         <img src={ url } alt={ title } />\r\n         <p>{ title }</p>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default GifGridItem;","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from '../components/GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n   const { data:images, loading } = useFetchGifs( category );\r\n\r\n   return (\r\n      <>\r\n         <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n         {\r\n            loading && <p className=\"animate__animated animate__flash\">Cargando...</p>\r\n         }\r\n\r\n         <div className=\"card-grid\">\r\n            {\r\n               images.map( image => (\r\n                  <GifGridItem\r\n                     key={ image.id }\r\n                     { ...image }\r\n                  />\r\n               ))\r\n            }\r\n         </div>\r\n      </>\r\n   );\r\n}\r\n\r\nexport default GifGrid;","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n   const [state, setState] = useState({\r\n      data: [],\r\n      loading: true\r\n   });\r\n\r\n   useEffect( () => {\r\n\r\n      getGifs( category )\r\n         .then( images => {\r\n            setState({\r\n               data: images,\r\n               loading: false\r\n            })\r\n         })\r\n   }, [ category ]);\r\n\r\n   return state; // { data: [], loading: true };\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n   // const categories = ['category 1', 'category 2', 'category 3'];\r\n   const [categories, setCategories] = useState(['goku']);\r\n\r\n//   const handleAdd = () => {\r\n//      // setCategories(['Category 4', ...categories]);\r\n//      setCategories(cats => ['Category 4', ...cats]);\r\n//   } \r\n\r\n   return (\r\n      <>\r\n         <h2>Gif Expert App</h2>\r\n\r\n         <AddCategory setCategories={ setCategories } />\r\n\r\n         <hr />\r\n         <ol>\r\n            {\r\n               categories.map( (category) => (\r\n                  // return <li key={category}>{category}</li>\r\n                  <GifGrid \r\n                     key={ category }\r\n                     category={ category }\r\n                  />\r\n               ))\r\n            }\r\n         </ol>\r\n      </>\r\n   );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <>\n    <GifExpertApp />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}